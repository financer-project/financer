name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        id: checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/yarn
          key: deps-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build Project
        run: yarn build

      - name: Save workspace as artifact
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: .

  lint:
    name: Lint Code
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Restore Workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace

      - name: Run ESLint
        run: yarn lint

  tests:
    name: Run Unit and Integration Tests
    needs: build
    runs-on: ubuntu-latest
    outputs:
      vitest-report: ${{ steps.vitest.outputs.report }}

    steps:
      - name: Restore Workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace

      - name: Run Vitest
        run: yarn test

  e2e:
    name: Run Cypress E2E Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Restore Workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace

      - name: Run E2E Tests using Cypress
        run: yarn test:e2e